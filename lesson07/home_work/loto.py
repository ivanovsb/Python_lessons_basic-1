#!/usr/bin/python3

"""
== Лото ==

Правила игры в лото.

Игра ведется с помощью специальных карточек, на которых отмечены числа, 
и фишек (бочонков) с цифрами.

Количество бочонков — 90 штук (с цифрами от 1 до 90).

Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр, 
расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:

--------------------------
    9 43 62          74 90
 2    27    75 78    82
   41 56 63     76      86 
--------------------------

В игре 2 игрока: пользователь и компьютер. Каждому в начале выдается 
случайная карточка. 

Каждый ход выбирается один случайный бочонок и выводится на экран.
Также выводятся карточка игрока и карточка компьютера.

Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
Если игрок выбрал "зачеркнуть":
	Если цифра есть на карточке - она зачеркивается и игра продолжается.
	Если цифры на карточке нет - игрок проигрывает и игра завершается.
Если игрок выбрал "продолжить":
	Если цифра есть на карточке - игрок проигрывает и игра завершается.
	Если цифры на карточке нет - игра продолжается.
	
Побеждает тот, кто первый закроет все числа на своей карточке.

Пример одного хода:

Новый бочонок: 70 (осталось 76)
------ Ваша карточка -----
 6  7          49    57 58
   14 26     -    78    85
23 33    38    48    71   
--------------------------
-- Карточка компьютера ---
 7 87     - 14    11      
      16 49    55 88    77    
   15 20     -       76  -
--------------------------
Зачеркнуть цифру? (y/n)

Подсказка: каждый следующий случайный бочонок из мешка удобно получать 
с помощью функции-генератора.

Подсказка: для работы с псевдослучайными числами удобно использовать 
модуль random: http://docs.python.org/3/library/random.html


import random

def gen_uniq_digit(lo, hi, n):
    seen = set()
    needed = n
    while needed != 0:
        uniqs = {random.randint(lo, hi) for _ in range(needed)}
        seen.update(uniqs)
        needed = n - len(seen)
    return list(seen)

def get_new_karta():
    loto_key = [i for i in range(15)]
    lotonumber_key = []
    lotoposition_value = []
    lotonumber_key += sorted(gen_uniq_digit(1, 90, 15))
    for i in range(3):
        lotoposition_value += sorted(gen_uniq_digit(1 + 9 * i, 9 + 9 * i, 5))
    return dict(zip(loto_key,zip(lotonumber_key, lotoposition_value)))

def print_karta(karta):
    print('\n')
    print('-----------------------------------')
    stroka = ['' for _ in range(27)]
    for key_number, elem_pos in karta.items():
        stroka[int(elem_pos[1]) - 1] = elem_pos[0]

    print("{0[0]:>3} {0[1]:>3} {0[2]:>3} {0[3]:>3} {0[4]:>3} {0[5]:>3} {0[6]:>3} {0[7]:>3} {0[8]:>3}".format(stroka[:9]))
    print("{0[0]:>3} {0[1]:>3} {0[2]:>3} {0[3]:>3} {0[4]:>3} {0[5]:>3} {0[6]:>3} {0[7]:>3} {0[8]:>3}".format(stroka[9:18]))
    print("{0[0]:>3} {0[1]:>3} {0[2]:>3} {0[3]:>3} {0[4]:>3} {0[5]:>3} {0[6]:>3} {0[7]:>3} {0[8]:>3}".format(stroka[18:27]))
    print('-----------------------------------')


karta1 = get_new_karta()
karta2 = get_new_karta()

print_karta(karta1)
print_karta(karta2)

loto_gen = random.randint(1,90)
print("Выпала цифра",loto_gen)

